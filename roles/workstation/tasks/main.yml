---
- name: Lock root user password
  become: yes
  user:
    name: root
    password_lock: true

- name: Add rpmfusion repos
  become: yes
  dnf:
    name:
      - https://download1.rpmfusion.org/free/fedora/rpmfusion-free-release-{{ ansible_distribution_version }}.noarch.rpm
      - https://download1.rpmfusion.org/nonfree/fedora/rpmfusion-nonfree-release-{{ ansible_distribution_version }}.noarch.rpm
    disable_gpg_check: yes
  when: workstation_enable_rpmfusion

- name: Add VS Code repo key
  become: yes
  rpm_key:
    key: https://packages.microsoft.com/keys/microsoft.asc

- name: Add VS Code repo
  become: yes
  yum_repository:
    name: code
    description: Visual Studio Code
    baseurl: https://packages.microsoft.com/yumrepos/vscode
    gpgcheck: yes
    gpgkey: https://packages.microsoft.com/keys/microsoft.asc
    file: vscode

- name: Update installed packages
  become: yes
  package:
    name: "*"
    state: latest

- name: Install packages
  become: yes
  package:
    name: "{{ workstation_packages }}"
  tags:
    - packages

- name: Enable classic snap support
  become: yes
  file:
    src: /var/lib/snapd/snap
    dest: /snap
    state: link
  when: workstation_use_snapd

- name: Install snaps
  become: yes
  snap:
    name: "{{ workstation_snaps }}"
  when: workstation_use_snapd

- name: Install snaps (classic)
  become: yes
  snap:
    name: "{{ item }}"
    classic: yes
  with_items: "{{ workstation_snaps_classic }}"
  when: workstation_use_snapd

- name: Add extra ca certs to certs directory
  become: yes
  copy:
    content: "{{ cert.value }}"
    dest: /etc/pki/tls/certs/{{ cert.key }}
  loop: "{{ workstation_extra_ca_certs | dict2items }}"
  loop_control:
    loop_var: cert

- name: Add extra ca certs to ca-trust
  become: yes
  copy:
    content: "{{ cert.value }}"
    dest: /etc/pki/ca-trust/source/anchors/{{ cert.key }}
  loop: "{{ workstation_extra_ca_certs | dict2items }}"
  loop_control:
    loop_var: cert
  notify: update-ca-trust

- name: Create workstation users, append to wheel group
  become: yes
  user:
    name: "{{ workstation_user.key }}"
    uid: "{{ workstation_user.value.uid | default(omit) }}"
    password: "{{ workstation_user.value.password | password_hash('sha512', 65534 | random(seed=ansible_machine_id) | string) }}"
    groups: wheel
    append: yes
    generate_ssh_key: yes
  loop: "{{ workstation_users | dict2items }}"
  loop_control:
    loop_var: workstation_user
  no_log: yes
